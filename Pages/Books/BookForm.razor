@inject AuthorService AuthorService

<EditForm
    Model="book"
    OnValidSubmit="OnValidSubmit"
>
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="title">Title:</label>
        <InputText
            id="title"
            @bind-Value="book.title"
            class="form-control"
        ></InputText>
    </div>
    <div class="form-group">
        <label for="price">Price:</label>
        <InputNumber
            id="price"
            @bind-Value="book.price"
            class="form-control"
        ></InputNumber>
    </div>
    <div class="form-group">
        <label for="pageCount">Page count:</label>
        <InputNumber
            id="pageCount"
            @bind-Value="book.pageCount"
            class="form-control"
        ></InputNumber>
    </div>
    <div class="form-group">
        <label for="authorId">Author</label>
        <select
            id="authorId"
            @bind="book.author_id"
            class="form-select"
        >
            @if (authors != null)
            {
                @foreach (var author in authors.data)
                {
                    <option value="@author.id">@(author.firstName + " " + author.lastName)</option>
                }
            }
        </select>
    </div>

    <div class="form-group">
        <label for="photoUrl">Photo url</label>
        <InputText
            id="photoUrl"
            @bind-Value="book.photoUrl"
            class="form-control"
        ></InputText>
    </div>
    <button
        type="submit"
        class="btn btn-primary"
    >Update</button>
</EditForm>


@code {
    [Parameter]
    public EditableBook book { get; set; }

    [Parameter]
    public EventCallback OnValidSubmit { get; set; }

    private ServiceResponse<List<AuthorDTO>> authors;

    protected override async Task OnInitializedAsync()
    {
        authors = await AuthorService.GetAuthors();
    }
}
